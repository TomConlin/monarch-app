[1mdiff --git a/widgets/phenogrid/css/phenogrid.css b/widgets/phenogrid/css/phenogrid.css[m
[1mindex a397591..1abc9eb 100644[m
[1m--- a/widgets/phenogrid/css/phenogrid.css[m
[1m+++ b/widgets/phenogrid/css/phenogrid.css[m
[36m@@ -238,7 +238,6 @@[m [mbody {[m
 .ui-dialog-content {[m
 	font-size:11px;[m
 	font-family: arial;[m
[31m-	background-color:#253494;[m
 	color:#000000;[m
 }[m
 [m
[1mdiff --git a/widgets/phenogrid/js/phenogrid.js b/widgets/phenogrid/js/phenogrid.js[m
[1mindex 687d104..0ac92cf 100644[m
[1m--- a/widgets/phenogrid/js/phenogrid.js[m
[1m+++ b/widgets/phenogrid/js/phenogrid.js[m
[36m@@ -448,11 +448,11 @@[m [mfunction modelDataPointPrint(point) {[m
 [m
 					self.state.phenotypeData = self.state.origPhenotypeData.slice();[m
 					self._reset();[m
[31m-					self.state.targetSpeciesName ="Overview";[m
[32m+[m					[32mself.state.targetSpeciesName = "Overview";[m
 					self._init();[m
 				});[m
 		}else{[m
[31m-			html = "<h4 id='err'>"+msg+"</h4><br />";[m
[32m+[m			[32mhtml = "<h4 id='err'>" + msg + "</h4><br />";[m
 			this.element.append(html);[m
 		}[m
 	},[m
[36m@@ -480,7 +480,7 @@[m [mfunction modelDataPointPrint(point) {[m
 			.enter()[m
 			.append("rect")[m
 			.attr("id","gridline")[m
[31m-			.attr("transform","translate(252, " + (this.state.yModelRegion + 5) +")")[m
[32m+[m			[32m.attr("transform","translate(252, " + (this.state.yModelRegion + 5) + ")")[m
 			.attr("x", function(d,i) { return d[1] * mWidth;})[m
 			.attr("y", function(d,i) { return d[0] * mHeight;})[m
 			.attr("class", "hour bordered deselected")[m
[36m@@ -2470,7 +2470,7 @@[m [mfunction modelDataPointPrint(point) {[m
 		} else{[m
 			speciesList.push(self.state.targetSpeciesName);[m
 		}[m
[31m-		var translation = "translate(" + (self.state.textWidth + self.state.xOffsetOver + 30) +"," + (self.state.yoffset + 10) + ")";[m
[32m+[m		[32mvar translation = "translate(" + (self.state.textWidth + self.state.xOffsetOver + 30) + "," + (self.state.yoffset + 10) + ")";[m
 [m
 		var xPerModel = self.state.modelWidth/speciesList.length;[m
 		var species = self.state.svg.selectAll("#specieslist")[m
[36m@@ -2527,7 +2527,7 @@[m [mfunction modelDataPointPrint(point) {[m
 				title: 'Phenogrid Notes'});[m
 		$dialog.html(text);[m
 		$dialog.dialog('open');[m
[31m-		self.state.tooltips[name]=text;[m
[32m+[m		[32mself.state.tooltips[name] = text;[m
 	},[m
 [m
 	/**[m
[36m@@ -3088,10 +3088,10 @@[m [mfunction modelDataPointPrint(point) {[m
 			text = "";[m
 			for (var j = 0; j < columns; j++){[m
 				id = self._getConceptId(unmatched[i++].id);[m
[31m-				if (unmatched[i-1].label !== undefined){[m
[31m-					label = unmatched[i-1].label;[m
[32m+[m				[32mif (unmatched[i - 1].label !== undefined){[m
[32m+[m					[32mlabel = unmatched[i - 1].label;[m
 				} else {[m
[31m-					label = unmatched[i-1].id;[m
[32m+[m					[32mlabel = unmatched[i - 1].id;[m
 				}[m
 				url_origin = self.document[0].location.origin;[m
 				text += "<td><a href='" + url_origin + "/phenotype/" + id + "' target='_blank'>" + label + "</a></td>";[m
[36m@@ -3146,10 +3146,10 @@[m [mfunction modelDataPointPrint(point) {[m
 		var pheno;[m
 		for (var i in phenotypelist) {[m
 			pheno = phenotypelist[i];[m
[31m-			if (typeof pheno ==='string') {[m
[32m+[m			[32mif (typeof pheno === 'string') {[m
 				newlist.push(pheno);[m
 			}[m
[31m-			if (pheno.observed==="positive") {[m
[32m+[m			[32mif (pheno.observed === "positive") {[m
 				newlist.push(pheno.id);[m
 			}[m
 		}[m
